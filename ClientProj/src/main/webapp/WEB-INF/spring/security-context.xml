<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
		
	<!-- 
	jdbc-user-service 하위속성 
		data-source-ref : DB연결을 위한 dataSource를 지정한다. 해당 연결은 반드시 root-context.xml에서 해야한다.(servlet-context.xml에서는 할 수 없음)
		role-prefix : "ROLE_"와 같은 권한명의 접두어를 지정한다. 만약 해당 항목을 "ROLE_"라고 지정한다면 DB에는 "USER" 혹은 "ADMIN"처럼 접두어를 제거한 상태로 권한명이 입력되어야 한다.
		users-by-username-query : 아이디를 이용하여 사용자 정보를 가져오는 쿼리문을 작성한다.(ID에따른 비번 일치여부 확인)
		authorities-by-username-query : 아이디를 이용하여 권한정보를 가져오는 쿼리문을 작성한다.(로그인에 성공한 사용자의 권한을 확인하기위해)
	 -->
	<security:http>
		<security:intercept-url pattern="/hospital/hpModify" access="hasAnyRole('ADMIN')"/>
		<security:intercept-url pattern="/hospital/modifyAction" access="permitAll"/>
		<security:intercept-url pattern="/**" access="permitAll"/>
		
		<!-- default-target-url는 언제가는거지??? -->
		
		<!-- login-processing-url="/nakjalogin" -->
		<security:form-login login-page="/security/login_secu"
						default-target-url="/hospital/home" 
						authentication-failure-url="/security/login_secu?error"
						username-parameter="id"
						password-parameter="pass" />
		<security:logout logout-url="/security/logout"
						logout-success-url="/hospital/home" />
		<security:access-denied-handler error-page="/security/hp_Denied"/>
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service 
				data-source-ref="dataSource"
				role-prefix=""
				users-by-username-query="SELECT hp_id, hp_pw, enabled FROM hospital WHERE hp_id=?"
				authorities-by-username-query="SELECT hp_id, authority FROM hospital WHERE hp_id=?"/>
		</security:authentication-provider>
	</security:authentication-manager>		
	
		
</beans>